"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8267],{3905:(e,t,i)=>{i.d(t,{Zo:()=>c,kt:()=>f});var r=i(7294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function p(e,t){if(null==e)return{};var i,r,n=function(e,t){if(null==e)return{};var i,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)i=a[r],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)i=a[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var s=r.createContext({}),l=function(e){var t=r.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var i=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=l(i),u=n,f=d["".concat(s,".").concat(u)]||d[u]||m[u]||a;return i?r.createElement(f,o(o({ref:t},c),{},{components:i})):r.createElement(f,o({ref:t},c))}));function f(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=i.length,o=new Array(a);o[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[d]="string"==typeof e?e:n,o[1]=p;for(var l=2;l<a;l++)o[l]=i[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,i)}u.displayName="MDXCreateElement"},7939:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>l});var r=i(7462),n=(i(7294),i(3905));const a={},o=void 0,p={unversionedId:"docs/src/repository_scrapping/file_scrapper/FileScrapper/d_storage_dict",id:"docs/src/repository_scrapping/file_scrapper/FileScrapper/d_storage_dict",title:"d_storage_dict",description:"storage_dict() -> Dict[int, CodeSnippet]",source:"@site/docs/docs/src/repository_scrapping/file_scrapper/FileScrapper/d_storage_dict.md",sourceDirName:"docs/src/repository_scrapping/file_scrapper/FileScrapper",slug:"/docs/src/repository_scrapping/file_scrapper/FileScrapper/d_storage_dict",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/file_scrapper/FileScrapper/d_storage_dict",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"d_scrape_specified",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/file_scrapper/FileScrapper/d_scrape_specified"},next:{title:"scrape_specified",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/file_scrapper/FileScrapper/scrape_specified"}},s={},l=[{value:"<code>storage_dict() -&gt; Dict[int, CodeSnippet]</code>",id:"storage_dict---dictint-codesnippet",level:2},{value:"Description:",id:"description",level:4},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Exceptions:",id:"exceptions",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],c={toc:l},d="wrapper";function m(e){let{components:t,...i}=e;return(0,n.kt)(d,(0,r.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"storage_dict---dictint-codesnippet"},(0,n.kt)("inlineCode",{parentName:"h2"},"storage_dict() -> Dict[int, CodeSnippet]")),(0,n.kt)("h4",{id:"description"},"Description:"),(0,n.kt)("p",null,"This method returns a dictionary containing code snippets. It belongs to the class ",(0,n.kt)("inlineCode",{parentName:"p"},"FileScrapper")," and is used to retrieve the stored code snippets."),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("p",null,"This method does not take any parameters."),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Dict[int, CodeSnippet]"),": A dictionary where the keys are integers representing the index of the code snippets, and the values are instances of the ",(0,n.kt)("inlineCode",{parentName:"li"},"CodeSnippet")," class.")),(0,n.kt)("h4",{id:"exceptions"},"Exceptions:"),(0,n.kt)("p",null,"This method does not throw any exceptions."),(0,n.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'# Sample code to demonstrate a common use case\nfile_scrapper = FileScrapper()\nsnippet_dict = file_scrapper.storage_dict()\nfor index, code_snippet in snippet_dict.items():\n    print(f"Code Snippet {index}:")\n    print(code_snippet)\n')),(0,n.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"storage_dict")," method simply returns the storage dictionary of code snippets from the ",(0,n.kt)("inlineCode",{parentName:"p"},"_code_scrapper")," attribute of the ",(0,n.kt)("inlineCode",{parentName:"p"},"FileScrapper")," class."),(0,n.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"CodeScrapper"),": This class is imported from the ",(0,n.kt)("inlineCode",{parentName:"li"},"repository_scrapping.code_scrapper")," module and is responsible for scraping and storing code snippets."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"CodeSnippet"),": This class is imported from the ",(0,n.kt)("inlineCode",{parentName:"li"},"snippet_management.code_snippet")," module and represents a code snippet."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"FileHandler"),": This class is imported from the ",(0,n.kt)("inlineCode",{parentName:"li"},"file_handler.file_handler")," module and is responsible for handling file operations."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DocIgnore"),": This class is imported from the ",(0,n.kt)("inlineCode",{parentName:"li"},"doc_ignore.doc_ignore")," module and is used for ignoring specific documentation sections."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"GitManager"),": This class is imported from the ",(0,n.kt)("inlineCode",{parentName:"li"},"git_tools.git_manager")," module and is responsible for managing Git operations."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Path"),": This class is imported from the ",(0,n.kt)("inlineCode",{parentName:"li"},"pathlib")," module and represents a file system path."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"List"),": This class is imported from the ",(0,n.kt)("inlineCode",{parentName:"li"},"typing")," module and is used to define a list."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Dict"),": This class is imported from the ",(0,n.kt)("inlineCode",{parentName:"li"},"typing")," module and is used to define a dictionary."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"FileExtension"),": This class is imported from the ",(0,n.kt)("inlineCode",{parentName:"li"},"tree_sitter_logic.languages")," module and represents the file extension.")))}m.isMDXComponent=!0}}]);