"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6382],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>f});var n=t(7294);function p(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){p(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,p=function(e,r){if(null==e)return{};var t,n,p={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(p[t]=e[t]);return p}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(p[t]=e[t])}return p}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},d=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},_=n.forwardRef((function(e,r){var t=e.components,p=e.mdxType,o=e.originalType,s=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),l=c(t),_=p,f=l["".concat(s,".").concat(_)]||l[_]||u[_]||o;return t?n.createElement(f,i(i({ref:r},d),{},{components:t})):n.createElement(f,i({ref:r},d))}));function f(e,r){var t=arguments,p=r&&r.mdxType;if("string"==typeof e||p){var o=t.length,i=new Array(o);i[0]=_;var a={};for(var s in r)hasOwnProperty.call(r,s)&&(a[s]=r[s]);a.originalType=e,a[l]="string"==typeof e?e:p,i[1]=a;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}_.displayName="MDXCreateElement"},4182:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var n=t(7462),p=(t(7294),t(3905));const o={},i=void 0,a={unversionedId:"docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__update_file_dependencies",id:"docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__update_file_dependencies",title:"d__update_file_dependencies",description:"updatefile_dependencies() -> None",source:"@site/docs/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__update_file_dependencies.md",sourceDirName:"docs/src/repository_scrapping/code_scrapper/CodeScrapper",slug:"/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__update_file_dependencies",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__update_file_dependencies",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"d__update_ast_root",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__update_ast_root"},next:{title:"d__update_nodes_names",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__update_nodes_names"}},s={},c=[{value:"<code>_update_file_dependencies() -&gt; None</code>",id:"_update_file_dependencies---none",level:2},{value:"Description:",id:"description",level:4},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Exceptions:",id:"exceptions",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],d={toc:c},l="wrapper";function u(e){let{components:r,...t}=e;return(0,p.kt)(l,(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,p.kt)("h2",{id:"_update_file_dependencies---none"},(0,p.kt)("inlineCode",{parentName:"h2"},"_update_file_dependencies() -> None")),(0,p.kt)("h4",{id:"description"},"Description:"),(0,p.kt)("p",null,"This method updates the file dependencies for a CodeScrapper object. It belongs to the class CodeScrapper."),(0,p.kt)("h4",{id:"parameters"},"Parameters:"),(0,p.kt)("p",null,"This method does not have any parameters."),(0,p.kt)("h4",{id:"returns"},"Returns:"),(0,p.kt)("p",null,"This method does not return any value."),(0,p.kt)("h4",{id:"exceptions"},"Exceptions:"),(0,p.kt)("p",null,"This method does not raise any exceptions."),(0,p.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"# Sample usage\nscrapper = CodeScrapper()\nscrapper._update_file_dependencies()\n")),(0,p.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,p.kt)("p",null,"This method updates the file dependencies of a CodeScrapper object by creating a new DependenciesInfo object. The DependenciesInfo object is initialized with the AST root and the file string of the input file."),(0,p.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"DependenciesInfo"),": Represents the dependencies information of a code file.")))}u.isMDXComponent=!0}}]);