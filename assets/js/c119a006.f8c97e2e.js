"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7301],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>v});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=i.createContext({}),c=function(e){var t=i.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(r),u=n,v=d["".concat(s,".").concat(u)]||d[u]||f[u]||a;return r?i.createElement(v,o(o({ref:t},p),{},{components:r})):i.createElement(v,o({ref:t},p))}));function v(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:n,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1008:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=r(7462),n=(r(7294),r(3905));const a={},o=void 0,l={unversionedId:"docs/src/git_tools/git_retrieaver/GitRetrieaver/d_retrieve_file",id:"docs/src/git_tools/git_retrieaver/GitRetrieaver/d_retrieve_file",title:"d_retrieve_file",description:"retrievefile(filepath: Path) -> str",source:"@site/docs/docs/src/git_tools/git_retrieaver/GitRetrieaver/d_retrieve_file.md",sourceDirName:"docs/src/git_tools/git_retrieaver/GitRetrieaver",slug:"/docs/src/git_tools/git_retrieaver/GitRetrieaver/d_retrieve_file",permalink:"/documentor_piedpiper/docs/src/git_tools/git_retrieaver/GitRetrieaver/d_retrieve_file",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"d_get_file_git_object",permalink:"/documentor_piedpiper/docs/src/git_tools/git_retrieaver/GitRetrieaver/d_get_file_git_object"},next:{title:"get_file_git_object",permalink:"/documentor_piedpiper/docs/src/git_tools/git_retrieaver/GitRetrieaver/get_file_git_object"}},s={},c=[{value:"<code>retrieve_file(file_path: Path) -&gt; str</code>",id:"retrieve_filefile_path-path---str",level:2},{value:"Description:",id:"description",level:4},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Dependencies:",id:"dependencies",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4}],p={toc:c},d="wrapper";function f(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,i.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"retrieve_filefile_path-path---str"},(0,n.kt)("inlineCode",{parentName:"h2"},"retrieve_file(file_path: Path) -> str")),(0,n.kt)("h4",{id:"description"},"Description:"),(0,n.kt)("p",null,"This method retrieves the content of a file from a Git repository. It belongs to the class ",(0,n.kt)("inlineCode",{parentName:"p"},"GitRetrieaver")," and uses the ",(0,n.kt)("inlineCode",{parentName:"p"},"GitManager")," class from the ",(0,n.kt)("inlineCode",{parentName:"p"},"git_tools.git_manager")," module."),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"file_path")," (",(0,n.kt)("inlineCode",{parentName:"li"},"Path"),"): The path of the file to retrieve.")),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"str"),": The content of the retrieved file.")),(0,n.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"GitManager"),": This class is used to access the Git repository.")),(0,n.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'# Retrieve the content of a file\nfile_content = retrieve_file(Path("path/to/file.py"))\nprint(file_content)\n')),(0,n.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Get the Git object of the file using the ",(0,n.kt)("inlineCode",{parentName:"li"},"get_file_git_object")," method from the ",(0,n.kt)("inlineCode",{parentName:"li"},"GitRetrieaver")," class."),(0,n.kt)("li",{parentName:"ol"},"Extract the Git ID of the file."),(0,n.kt)("li",{parentName:"ol"},"Retrieve the Git blob object of the file using the Git ID."),(0,n.kt)("li",{parentName:"ol"},"Get the binary data of the file from the Git blob."),(0,n.kt)("li",{parentName:"ol"},"Decode the binary data using UTF-8 encoding to obtain the file content."),(0,n.kt)("li",{parentName:"ol"},"Return the file content.")))}f.isMDXComponent=!0}}]);