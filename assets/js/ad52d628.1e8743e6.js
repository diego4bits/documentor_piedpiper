"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5403],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),u=r,h=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1340:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={},o=void 0,s={unversionedId:"docs/src/ai_logic/documentor_chat/d_DocumentorChat",id:"docs/src/ai_logic/documentor_chat/d_DocumentorChat",title:"d_DocumentorChat",description:"DocumentorChat",source:"@site/docs/docs/src/ai_logic/documentor_chat/d_DocumentorChat.md",sourceDirName:"docs/src/ai_logic/documentor_chat",slug:"/docs/src/ai_logic/documentor_chat/d_DocumentorChat",permalink:"/documentor_piedpiper/docs/src/ai_logic/documentor_chat/d_DocumentorChat",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"DocumentorChat",permalink:"/documentor_piedpiper/docs/src/ai_logic/documentor_chat/DocumentorChat"},next:{title:"d___contains__",permalink:"/documentor_piedpiper/docs/src/doc_ignore/doc_ignore/DocIgnore/d___contains__"}},l={},c=[{value:"<code>DocumentorChat</code>",id:"documentorchat",level:2},{value:"Description:",id:"description",level:4},{value:"Attributes:",id:"attributes",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],p={toc:c},m="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"documentorchat"},(0,r.kt)("inlineCode",{parentName:"h2"},"DocumentorChat")),(0,r.kt)("h4",{id:"description"},"Description:"),(0,r.kt)("p",null,"This class represents a documentor for chat conversations. It provides functionalities for documenting chat conversations using OpenAI's Chat API."),(0,r.kt)("h4",{id:"attributes"},"Attributes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"instance")," (",(0,r.kt)("inlineCode",{parentName:"li"},"ClassVar"),"): Class variable representing an instance of the class. It is used to track the single instance of the class. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"None"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"chat")," (",(0,r.kt)("inlineCode",{parentName:"li"},"ChatOpenAI"),"): An instance of the ",(0,r.kt)("inlineCode",{parentName:"li"},"ChatOpenAI")," class. It is used for interacting with OpenAI's Chat API and performing chat conversations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"system_message")," (",(0,r.kt)("inlineCode",{parentName:"li"},"SystemMessagePromptTemplate"),"): An instance of the ",(0,r.kt)("inlineCode",{parentName:"li"},"SystemMessagePromptTemplate")," class. It is used as a template for system messages in chat conversations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"snippet_to_doc")," (",(0,r.kt)("inlineCode",{parentName:"li"},"CodeSnippet"),"): An instance of the ",(0,r.kt)("inlineCode",{parentName:"li"},"CodeSnippet")," class. It is used for extracting code snippets from chat conversations for documentation purposes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"current_doc_message")," (",(0,r.kt)("inlineCode",{parentName:"li"},"HumanMessage"),"): An instance of the ",(0,r.kt)("inlineCode",{parentName:"li"},"HumanMessage")," class. It represents the current message being documented."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"current_chat_message")," (",(0,r.kt)("inlineCode",{parentName:"li"},"ChatPromptTemplate"),"): An instance of the ",(0,r.kt)("inlineCode",{parentName:"li"},"ChatPromptTemplate")," class. It represents the current chat message in the conversation."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"current_answer")," (",(0,r.kt)("inlineCode",{parentName:"li"},"str"),"): A string representing the current answer received from the chat API. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"None"),".")),(0,r.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Sample code to demonstrate a common use case of instantiating and using the class\ninstance = DocumentorChat()\n# The rest of the example\n")),(0,r.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"DocumentorChat")," class is responsible for documenting chat conversations using OpenAI's Chat API. It utilizes the ",(0,r.kt)("inlineCode",{parentName:"p"},"ChatOpenAI")," class to interact with the API and perform chat conversations. The class also uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"SystemMessagePromptTemplate")," class for generating system messages, and the ",(0,r.kt)("inlineCode",{parentName:"p"},"CodeSnippet")," class for extracting code snippets from the chat conversations."),(0,r.kt)("p",null,"The class keeps track of the current message being documented using the ",(0,r.kt)("inlineCode",{parentName:"p"},"current_doc_message")," attribute. It also stores the current chat message and answer received from the API using the ",(0,r.kt)("inlineCode",{parentName:"p"},"current_chat_message")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"current_answer")," attributes, respectively."),(0,r.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SingletonMeta"),": A metaclass used for implementing the singleton design pattern."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ChatOpenAI"),": A class for interacting with OpenAI's Chat API."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SystemMessagePromptTemplate"),": A class for generating system messages in chat conversations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CodeSnippet"),": A class for extracting code snippets from chat conversations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HumanMessage"),": A class representing a human message in a chat conversation."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ChatPromptTemplate"),": A class representing a chat message template."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PromptTemplate"),": A base class for prompt templates."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CLASS_DOCUMENTATION_TEMPLATE"),": A template for documenting a class."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"METHOD_DOCUMENTATION_TEMPLATE"),": A template for documenting a method."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"FUNCTION_DOCUMENTATION_TEMPLATE"),": A template for documenting a function."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DEFAULT_DOCUMENTATION_TEMPLATE"),": A default template for documenting."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ClassVar"),": A type hint indicating that a variable is a class variable."),(0,r.kt)("li",{parentName:"ul"},"This class does not have any other dependencies.")))}d.isMDXComponent=!0}}]);