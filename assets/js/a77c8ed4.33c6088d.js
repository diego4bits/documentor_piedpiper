"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8502],{3905:(e,t,i)=>{i.d(t,{Zo:()=>s,kt:()=>u});var r=i(7294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function a(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function c(e,t){if(null==e)return{};var i,r,n=function(e,t){if(null==e)return{};var i,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)i=o[r],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)i=o[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var l=r.createContext({}),m=function(e){var t=r.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):a(a({},t),e)),i},s=function(e){var t=m(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var i=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=m(i),f=n,u=d["".concat(l,".").concat(f)]||d[f]||p[f]||o;return i?r.createElement(u,a(a({ref:t},s),{},{components:i})):r.createElement(u,a({ref:t},s))}));function u(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=i.length,a=new Array(o);a[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[d]="string"==typeof e?e:n,a[1]=c;for(var m=2;m<o;m++)a[m]=i[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,i)}f.displayName="MDXCreateElement"},5783:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>m});var r=i(7462),n=(i(7294),i(3905));const o={},a=void 0,c={unversionedId:"docs/src/git_tools/git_file_checker/GitFileChecker/d__get_diff",id:"docs/src/git_tools/git_file_checker/GitFileChecker/d__get_diff",title:"d__get_diff",description:"getdiff(tailcommit Commit) -> Diff",source:"@site/docs/docs/src/git_tools/git_file_checker/GitFileChecker/d__get_diff.md",sourceDirName:"docs/src/git_tools/git_file_checker/GitFileChecker",slug:"/docs/src/git_tools/git_file_checker/GitFileChecker/d__get_diff",permalink:"/documentor_piedpiper/docs/src/git_tools/git_file_checker/GitFileChecker/d__get_diff",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"d__extract_changes",permalink:"/documentor_piedpiper/docs/src/git_tools/git_file_checker/GitFileChecker/d__extract_changes"},next:{title:"d_update_changed_files",permalink:"/documentor_piedpiper/docs/src/git_tools/git_file_checker/GitFileChecker/d_update_changed_files"}},l={},m=[{value:"<code>_get_diff(tail_commit: Commit, head_commit: Commit) -&gt; Diff</code>",id:"_get_difftail_commit-commit-head_commit-commit---diff",level:2},{value:"Description:",id:"description",level:4},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Exceptions:",id:"exceptions",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],s={toc:m},d="wrapper";function p(e){let{components:t,...i}=e;return(0,n.kt)(d,(0,r.Z)({},s,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"_get_difftail_commit-commit-head_commit-commit---diff"},(0,n.kt)("inlineCode",{parentName:"h2"},"_get_diff(tail_commit: Commit, head_commit: Commit) -> Diff")),(0,n.kt)("h4",{id:"description"},"Description:"),(0,n.kt)("p",null,"This method retrieves the difference between two commits and returns a Diff object. It belongs to the class GitFileChecker."),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"tail_commit")," (",(0,n.kt)("inlineCode",{parentName:"li"},"Commit"),"): The older commit to compare."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"head_commit")," (",(0,n.kt)("inlineCode",{parentName:"li"},"Commit"),"): The newer commit to compare.")),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Diff"),": The difference between the two commits.")),(0,n.kt)("h4",{id:"exceptions"},"Exceptions:"),(0,n.kt)("p",null,"This method does not throw any exceptions."),(0,n.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"# Retrieving the difference between two commits\ndiff = _get_diff(tail_commit, head_commit)\nprint(diff)\n")),(0,n.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"_get_diff")," method uses the ",(0,n.kt)("inlineCode",{parentName:"p"},"diff")," function from the ",(0,n.kt)("inlineCode",{parentName:"p"},"GitManager.project_repo()")," object to obtain the difference between the ",(0,n.kt)("inlineCode",{parentName:"p"},"tail_commit")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"head_commit")," commits. It returns a ",(0,n.kt)("inlineCode",{parentName:"p"},"Diff")," object that represents the difference between the two commits."),(0,n.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"GitManager"),": Provides access to the project repository and its diff function."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Commit"),": Represents a commit in the Git repository."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Diff"),": Represents the difference between two commits.")))}p.isMDXComponent=!0}}]);