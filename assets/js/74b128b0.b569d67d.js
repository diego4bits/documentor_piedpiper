"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2245],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>_});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function p(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?p(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=n.createContext({}),c=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},d=function(e){var r=c(e.components);return n.createElement(i.Provider,{value:r},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,p=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),l=c(t),m=a,_=l["".concat(i,".").concat(m)]||l[m]||u[m]||p;return t?n.createElement(_,o(o({ref:r},d),{},{components:t})):n.createElement(_,o({ref:r},d))}));function _(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var p=t.length,o=new Array(p);o[0]=m;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s[l]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<p;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9227:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>p,metadata:()=>s,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const p={},o=void 0,s={unversionedId:"docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__update_parser",id:"docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__update_parser",title:"d__update_parser",description:"updateparser() -> None",source:"@site/docs/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__update_parser.md",sourceDirName:"docs/src/repository_scrapping/code_scrapper/CodeScrapper",slug:"/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__update_parser",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__update_parser",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"d__update_nodes_names",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__update_nodes_names"},next:{title:"d__update_scrapper",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__update_scrapper"}},i={},c=[{value:"<code>_update_parser() -&gt; None</code>",id:"_update_parser---none",level:2},{value:"Description:",id:"description",level:4},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Exceptions:",id:"exceptions",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],d={toc:c},l="wrapper";function u(e){let{components:r,...t}=e;return(0,a.kt)(l,(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"_update_parser---none"},(0,a.kt)("inlineCode",{parentName:"h2"},"_update_parser() -> None")),(0,a.kt)("h4",{id:"description"},"Description:"),(0,a.kt)("p",null,"This method updates the parser language based on the file extension of the input file. It belongs to the class ",(0,a.kt)("inlineCode",{parentName:"p"},"CodeScrapper"),"."),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("p",null,"This method does not take any parameters."),(0,a.kt)("h4",{id:"returns"},"Returns:"),(0,a.kt)("p",null,"This method does not return any value."),(0,a.kt)("h4",{id:"exceptions"},"Exceptions:"),(0,a.kt)("p",null,"This method does not throw any exceptions."),(0,a.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# Sample code to demonstrate a common use case\nscraper = CodeScrapper()\nscraper._update_parser()\n")),(0,a.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,a.kt)("p",null,"The method retrieves the file extension of the input file and maps it to the corresponding ",(0,a.kt)("inlineCode",{parentName:"p"},"FileExtension")," enum value. Then, it sets the language of the parser to the retrieved value."),(0,a.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"FileExtension"),": Enum that maps file extensions to language values.")))}u.isMDXComponent=!0}}]);