"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[173],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>m});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var a=r.createContext({}),c=function(e){var t=r.useContext(a),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},d=function(e){var t=c(e.components);return r.createElement(a.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,a=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(o),g=n,m=p["".concat(a,".").concat(g)]||p[g]||u[g]||i;return o?r.createElement(m,l(l({ref:t},d),{},{components:o})):r.createElement(m,l({ref:t},d))}));function m(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,l=new Array(i);l[0]=g;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s[p]="string"==typeof e?e:n,l[1]=s;for(var c=2;c<i;c++)l[c]=o[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,o)}g.displayName="MDXCreateElement"},5044:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=o(7462),n=(o(7294),o(3905));const i={},l=void 0,s={unversionedId:"docs/src/doc_log/doc_log/DocLog/exists_doc_log",id:"docs/src/doc_log/doc_log/DocLog/exists_doc_log",title:"exists_doc_log",description:"existsdoclog() -> bool",source:"@site/docs/docs/src/doc_log/doc_log/DocLog/exists_doc_log.md",sourceDirName:"docs/src/doc_log/doc_log/DocLog",slug:"/docs/src/doc_log/doc_log/DocLog/exists_doc_log",permalink:"/documentor_piedpiper/docs/src/doc_log/doc_log/DocLog/exists_doc_log",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"create_doc_log",permalink:"/documentor_piedpiper/docs/src/doc_log/doc_log/DocLog/create_doc_log"},next:{title:"get_doc_log_path",permalink:"/documentor_piedpiper/docs/src/doc_log/doc_log/DocLog/get_doc_log_path"}},a={},c=[{value:"<code>exists_doc_log() -&gt; bool</code>",id:"exists_doc_log---bool",level:2},{value:"Description:",id:"description",level:4},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Exceptions:",id:"exceptions",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],d={toc:c},p="wrapper";function u(e){let{components:t,...o}=e;return(0,n.kt)(p,(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"exists_doc_log---bool"},(0,n.kt)("inlineCode",{parentName:"h2"},"exists_doc_log() -> bool")),(0,n.kt)("h4",{id:"description"},"Description:"),(0,n.kt)("p",null,'This method checks if the file "doc.log" exists in the git repository. It belongs to the class ',(0,n.kt)("inlineCode",{parentName:"p"},"DocLog"),"."),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("p",null,"This method does not have any parameters."),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"bool"),": Returns ",(0,n.kt)("inlineCode",{parentName:"li"},"True"),' if the file "doc.log" exists in the git repository, otherwise returns ',(0,n.kt)("inlineCode",{parentName:"li"},"False"),".")),(0,n.kt)("h4",{id:"exceptions"},"Exceptions:"),(0,n.kt)("p",null,"This method does not throw any exceptions."),(0,n.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'# Sample code to check if "doc.log" exists in the git repository\nresult = exists_doc_log()\nprint(result)\n')),(0,n.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},'Sets the desired file path as "./doc.log".'),(0,n.kt)("li",{parentName:"ol"},"Tries to select the latest commit from the front of the git repository using ",(0,n.kt)("inlineCode",{parentName:"li"},"GitManager.select_front_commit()"),"."),(0,n.kt)("li",{parentName:"ol"},"Tries to get the file object of the desired path from the git repository using ",(0,n.kt)("inlineCode",{parentName:"li"},"GitRetrieaver.get_file_git_object(desired_path)"),"."),(0,n.kt)("li",{parentName:"ol"},"If both steps 2 and 3 are successful, returns ",(0,n.kt)("inlineCode",{parentName:"li"},"True"),' indicating that the file "doc.log" exists in the git repository.'),(0,n.kt)("li",{parentName:"ol"},"If any of the steps 2 or 3 fails, returns ",(0,n.kt)("inlineCode",{parentName:"li"},"False"),' indicating that the file "doc.log" does not exist in the git repository.')),(0,n.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"GitManager"),": Manages git operations."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"GitRetrieaver"),": Retrieves git objects."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Path"),": Provides the ability to work with file paths."),(0,n.kt)("li",{parentName:"ul"},"This method does not have any other dependencies.")))}u.isMDXComponent=!0}}]);