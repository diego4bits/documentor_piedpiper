"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5549],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>_});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=r.createContext({}),l=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=l(n),m=i,_=d["".concat(o,".").concat(m)]||d[m]||u[m]||s;return n?r.createElement(_,a(a({ref:t},c),{},{components:n})):r.createElement(_,a({ref:t},c))}));function _(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,a=new Array(s);a[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[d]="string"==typeof e?e:i,a[1]=p;for(var l=2;l<s;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2425:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>p,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const s={},a=void 0,p={unversionedId:"docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__save_code_snippet",id:"docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__save_code_snippet",title:"d__save_code_snippet",description:"savecodesnippet(codesnippet: CodeSnippet) -> None",source:"@site/docs/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__save_code_snippet.md",sourceDirName:"docs/src/repository_scrapping/code_scrapper/CodeScrapper",slug:"/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__save_code_snippet",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__save_code_snippet",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"d__check_input_file",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__check_input_file"},next:{title:"d__scrape_assignment",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/code_scrapper/CodeScrapper/d__scrape_assignment"}},o={},l=[{value:"<code>_save_code_snippet(code_snippet: CodeSnippet) -&gt; None</code>",id:"_save_code_snippetcode_snippet-codesnippet---none",level:2},{value:"Description:",id:"description",level:4},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Exceptions:",id:"exceptions",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],c={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"_save_code_snippetcode_snippet-codesnippet---none"},(0,i.kt)("inlineCode",{parentName:"h2"},"_save_code_snippet(code_snippet: CodeSnippet) -> None")),(0,i.kt)("h4",{id:"description"},"Description:"),(0,i.kt)("p",null,"This method saves a code snippet to the snippet storage. It belongs to the class ",(0,i.kt)("inlineCode",{parentName:"p"},"CodeScrapper"),"."),(0,i.kt)("h4",{id:"parameters"},"Parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"code_snippet")," (",(0,i.kt)("inlineCode",{parentName:"li"},"CodeSnippet"),"): The code snippet object to be saved.")),(0,i.kt)("h4",{id:"returns"},"Returns:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"None"),": This method does not return anything.")),(0,i.kt)("h4",{id:"exceptions"},"Exceptions:"),(0,i.kt)("p",null,"This method does not throw any exceptions."),(0,i.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'# Creating a code snippet object\ncode = "print(\'Hello, World!\')"\nlanguage = "python"\nfile_extension = ".py"\ndependencies = {"sys": "library"}\nsnippet = CodeSnippet(code, language, file_extension, dependencies)\n\n# Saving the code snippet\ncode_scrapper = CodeScrapper()\ncode_scrapper._save_code_snippet(snippet)\n')),(0,i.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,i.kt)("p",null,"The method takes a code snippet object as a parameter and adds it to the snippet storage."),(0,i.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SnippetStorage"),": This class is responsible for storing code snippets."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CodeSnippet"),": This class represents a code snippet with its attributes such as code, language, file extension, and dependencies."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SnippetExtract"),": This class provides methods for extracting code snippets from files."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"FileExtension"),": This enum represents different file extensions."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LanguageNodes"),": This class contains predefined language nodes for tree-sitter."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"get_specified_nodes"),": This function retrieves specified nodes from a tree-sitter parser."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"global_node_types"),": This function returns all available node types in a tree-sitter parser."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"get_nodes"),": This function retrieves nodes from a tree-sitter parser."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"FileHandler"),": This class provides methods for handling files."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Set"),": This class represents an unordered collection of unique elements."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Dict"),": This class represents a dictionary, a collection of key-value pairs."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dataclass"),": This decorator is used to create data classes."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"field"),": This function is used to define default values for fields in a data class."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Parser"),": This class is used for parsing source code using tree-sitter."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Node"),": This class represents a node in a tree-sitter parse tree."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DependenciesInfo"),": This class provides information about dependencies in code snippets.")))}u.isMDXComponent=!0}}]);