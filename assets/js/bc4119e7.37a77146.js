"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4979],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>u});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=i.createContext({}),p=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return i.createElement(d.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,u=c["".concat(d,".").concat(m)]||c[m]||f[m]||a;return n?i.createElement(u,o(o({ref:t},s),{},{components:n})):i.createElement(u,o({ref:t},s))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1322:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var i=n(7462),r=(n(7294),n(3905));const a={},o=void 0,l={unversionedId:"docs/src/snippet_management/node_info/NodeInfo/d___init__",id:"docs/src/snippet_management/node_info/NodeInfo/d___init__",title:"d___init__",description:'init(childnode "NodeInfo" = None, file_str: str = None)',source:"@site/docs/docs/src/snippet_management/node_info/NodeInfo/d___init__.md",sourceDirName:"docs/src/snippet_management/node_info/NodeInfo",slug:"/docs/src/snippet_management/node_info/NodeInfo/d___init__",permalink:"/documentor_piedpiper/docs/src/snippet_management/node_info/NodeInfo/d___init__",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"children",permalink:"/documentor_piedpiper/docs/src/snippet_management/node_info/NodeInfo/children"},next:{title:"d___repr__",permalink:"/documentor_piedpiper/docs/src/snippet_management/node_info/NodeInfo/d___repr__"}},d={},p=[{value:"<code>__init__(child_node: Node, parent_node: &quot;NodeInfo&quot; = None, file_str: str = None)</code>",id:"__init__child_node-node-parent_node-nodeinfo--none-file_str-str--none",level:2},{value:"Description:",id:"description",level:4},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],s={toc:p},c="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"__init__child_node-node-parent_node-nodeinfo--none-file_str-str--none"},(0,r.kt)("inlineCode",{parentName:"h2"},'__init__(child_node: Node, parent_node: "NodeInfo" = None, file_str: str = None)')),(0,r.kt)("h4",{id:"description"},"Description:"),(0,r.kt)("p",null,"This method initializes an instance of the NodeInfo class. It assigns values to the attributes of the class based on the provided parameters. It is used to create a NodeInfo object for a specific node in a tree. This method belongs to the class NodeInfo."),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"child_node")," (",(0,r.kt)("inlineCode",{parentName:"li"},"Node"),"): The child node for which to create a NodeInfo object."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"parent_node")," (",(0,r.kt)("inlineCode",{parentName:"li"},"NodeInfo"),", optional): The parent node of the child node. Defaults to None."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"file_str")," (",(0,r.kt)("inlineCode",{parentName:"li"},"str"),", optional): The string representation of the file. Defaults to None.")),(0,r.kt)("h4",{id:"returns"},"Returns:"),(0,r.kt)("p",null,"This method does not return any value."),(0,r.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Create a NodeInfo object for a child node without a parent\nnode_info1 = NodeInfo(child_node)\n\n# Create a NodeInfo object for a child node with a parent and a file string\nnode_info2 = NodeInfo(child_node, parent_node, file_str)\n")),(0,r.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Assigns the ",(0,r.kt)("inlineCode",{parentName:"li"},"file_str")," parameter value to the ",(0,r.kt)("inlineCode",{parentName:"li"},"self.file_str")," attribute."),(0,r.kt)("li",{parentName:"ul"},"Assigns the ",(0,r.kt)("inlineCode",{parentName:"li"},"child_node")," parameter value to the ",(0,r.kt)("inlineCode",{parentName:"li"},"self.node")," attribute."),(0,r.kt)("li",{parentName:"ul"},"Checks if the ",(0,r.kt)("inlineCode",{parentName:"li"},"parent_node")," parameter is None:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'If True, assigns "program" to the ',(0,r.kt)("inlineCode",{parentName:"li"},"self.parent_type"),' attribute and "program" to the ',(0,r.kt)("inlineCode",{parentName:"li"},"self.parent_identifier")," attribute."),(0,r.kt)("li",{parentName:"ul"},"If False, checks if the ",(0,r.kt)("inlineCode",{parentName:"li"},"parent_node.parent_type"),' attribute is "program":',(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'If True, assigns "root node" to the ',(0,r.kt)("inlineCode",{parentName:"li"},"self.parent_type"),' attribute and "root node" to the ',(0,r.kt)("inlineCode",{parentName:"li"},"self.parent_identifier")," attribute."),(0,r.kt)("li",{parentName:"ul"},"If False, calls the ",(0,r.kt)("inlineCode",{parentName:"li"},"_get_identifier")," method of the NodeInfo class with the ",(0,r.kt)("inlineCode",{parentName:"li"},"parent_node.node")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"file_str")," parameters to get the ",(0,r.kt)("inlineCode",{parentName:"li"},"parent_identifier")," value.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"If the ",(0,r.kt)("inlineCode",{parentName:"li"},"parent_identifier")," is None, assigns the ",(0,r.kt)("inlineCode",{parentName:"li"},"parent_node.parent_type")," value to the ",(0,r.kt)("inlineCode",{parentName:"li"},"self.parent_type")," attribute and the ",(0,r.kt)("inlineCode",{parentName:"li"},"parent_node.parent_identifier")," value to the ",(0,r.kt)("inlineCode",{parentName:"li"},"self.parent_identifier")," attribute."),(0,r.kt)("li",{parentName:"ul"},"If the ",(0,r.kt)("inlineCode",{parentName:"li"},"parent_identifier")," is not None, assigns the ",(0,r.kt)("inlineCode",{parentName:"li"},"parent_node.node.type")," value to the ",(0,r.kt)("inlineCode",{parentName:"li"},"self.parent_type")," attribute and the ",(0,r.kt)("inlineCode",{parentName:"li"},"parent_identifier")," value to the ",(0,r.kt)("inlineCode",{parentName:"li"},"self.parent_identifier")," attribute.")))))))),(0,r.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Node"),": This class is imported from the ",(0,r.kt)("inlineCode",{parentName:"li"},"tree_sitter")," module and represents a node in a tree. It is used as the type for the ",(0,r.kt)("inlineCode",{parentName:"li"},"child_node")," parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"NodeInfo"),": This class is imported from an unknown module and is used as the type for the ",(0,r.kt)("inlineCode",{parentName:"li"},"parent_node")," parameter.")))}f.isMDXComponent=!0}}]);