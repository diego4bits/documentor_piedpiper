"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5903],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>_});var r=n(7294);function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,d=function(e,t){if(null==e)return{};var n,r,d={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(d[n]=e[n]);return d}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(d[n]=e[n])}return d}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,d=e.mdxType,a=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=d,_=p["".concat(s,".").concat(m)]||p[m]||u[m]||a;return n?r.createElement(_,o(o({ref:t},l),{},{components:n})):r.createElement(_,o({ref:t},l))}));function _(e,t){var n=arguments,d=t&&t.mdxType;if("string"==typeof e||d){var a=n.length,o=new Array(a);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:d,o[1]=i;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7489:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(7462),d=(n(7294),n(3905));const a={},o=void 0,i={unversionedId:"docs/src/documentation_orchestrator/added_files_manager/AddedFilesManager/d_check_added_files",id:"docs/src/documentation_orchestrator/added_files_manager/AddedFilesManager/d_check_added_files",title:"d_check_added_files",description:"checkaddedfiles() -> None",source:"@site/docs/docs/src/documentation_orchestrator/added_files_manager/AddedFilesManager/d_check_added_files.md",sourceDirName:"docs/src/documentation_orchestrator/added_files_manager/AddedFilesManager",slug:"/docs/src/documentation_orchestrator/added_files_manager/AddedFilesManager/d_check_added_files",permalink:"/documentor_piedpiper/docs/src/documentation_orchestrator/added_files_manager/AddedFilesManager/d_check_added_files",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"d__update_snippets_to_doc",permalink:"/documentor_piedpiper/docs/src/documentation_orchestrator/added_files_manager/AddedFilesManager/d__update_snippets_to_doc"},next:{title:"d_get_snippets_to_doc",permalink:"/documentor_piedpiper/docs/src/documentation_orchestrator/added_files_manager/AddedFilesManager/d_get_snippets_to_doc"}},s={},c=[{value:"<code>check_added_files() -&gt; None</code>",id:"check_added_files---none",level:2},{value:"Description:",id:"description",level:4},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Exceptions:",id:"exceptions",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],l={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,d.kt)(p,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,d.kt)("h2",{id:"check_added_files---none"},(0,d.kt)("inlineCode",{parentName:"h2"},"check_added_files() -> None")),(0,d.kt)("h4",{id:"description"},"Description:"),(0,d.kt)("p",null,"This method performs an update of the snippets stored in the documentation. It belongs to the class 'AddedFilesManager' and is used for checking the added files."),(0,d.kt)("h4",{id:"parameters"},"Parameters:"),(0,d.kt)("p",null,"This method does not take any parameters."),(0,d.kt)("h4",{id:"returns"},"Returns:"),(0,d.kt)("p",null,"This method does not return any value."),(0,d.kt)("h4",{id:"exceptions"},"Exceptions:"),(0,d.kt)("p",null,"This method does not throw any exceptions."),(0,d.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-python"},"# Sample code to demonstrate a common use case\ncheck_added_files()\n")),(0,d.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,d.kt)("p",null,"This method calls the ",(0,d.kt)("inlineCode",{parentName:"p"},"_update_snippets_to_doc()")," method of the ",(0,d.kt)("inlineCode",{parentName:"p"},"AddedFilesManager")," instance to update the stored snippets to the documentation."),(0,d.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,d.kt)("ul",null,(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("inlineCode",{parentName:"li"},"AddedFilesManager"),": The class to which this method belongs and is responsible for managing added files.")))}u.isMDXComponent=!0}}]);