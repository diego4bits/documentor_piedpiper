"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5774],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),g=i,m=p["".concat(c,".").concat(g)]||p[g]||u[g]||o;return n?r.createElement(m,a(a({ref:t},d),{},{components:n})):r.createElement(m,a({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=g;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},6471:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const o={},a=void 0,s={unversionedId:"docs/src/doc_ignore/doc_ignore/d_DocIgnore",id:"docs/src/doc_ignore/doc_ignore/d_DocIgnore",title:"d_DocIgnore",description:"DocIgnore",source:"@site/docs/docs/src/doc_ignore/doc_ignore/d_DocIgnore.md",sourceDirName:"docs/src/doc_ignore/doc_ignore",slug:"/docs/src/doc_ignore/doc_ignore/d_DocIgnore",permalink:"/documentor_piedpiper/docs/src/doc_ignore/doc_ignore/d_DocIgnore",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"DocIgnore",permalink:"/documentor_piedpiper/docs/src/doc_ignore/doc_ignore/DocIgnore"},next:{title:"create_doc_log",permalink:"/documentor_piedpiper/docs/src/doc_log/doc_log/DocLog/create_doc_log"}},c={},l=[{value:"<code>DocIgnore</code>",id:"docignore",level:2},{value:"Description:",id:"description",level:4},{value:"Attributes:",id:"attributes",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],d={toc:l},p="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"docignore"},(0,i.kt)("inlineCode",{parentName:"h2"},"DocIgnore")),(0,i.kt)("h4",{id:"description"},"Description:"),(0,i.kt)("p",null,"This class represents a document ignore entity and provides functionalities for managing and retrieving ignored files from a git repository."),(0,i.kt)("h4",{id:"attributes"},"Attributes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"instance")," (",(0,i.kt)("inlineCode",{parentName:"li"},"ClassVar"),"): Represents an instance of the class. This attribute is shared among all instances of the class.")),(0,i.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# Sample code to demonstrate a common use case of instantiating and using the class\ninstance = DocIgnore()\n# The rest of the example\n")),(0,i.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"DocIgnore")," class is responsible for managing and retrieving ignored files from a git repository. It utilizes various dependencies to accomplish this task. The class does not have any specific attributes other than the ",(0,i.kt)("inlineCode",{parentName:"p"},"instance")," attribute, which represents an instance of the class and is shared among all instances."),(0,i.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SingletonMeta"),": This metaclass is used to implement the singleton design pattern, ensuring that only one instance of the class can exist."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GitRetrieaver"),": This class is used for retrieving information about ignored files from a git repository."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GitManager"),": This class is used for managing the git repository, including operations such as adding, committing, and pushing changes."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Path"),": This class is used for representing and manipulating file paths."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ClassVar"),": This is a type hint that represents a class variable. It is used to declare the ",(0,i.kt)("inlineCode",{parentName:"li"},"instance")," attribute in the class.")))}u.isMDXComponent=!0}}]);