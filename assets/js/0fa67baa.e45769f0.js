"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2584],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(r),f=a,h=d["".concat(c,".").concat(f)]||d[f]||u[f]||i;return r?n.createElement(h,o(o({ref:t},s),{},{components:r})):n.createElement(h,o({ref:t},s))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},2044:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={},o=void 0,l={unversionedId:"docs/src/repository_scrapping/code_scrapper/CodeScrapper/change_file",id:"docs/src/repository_scrapping/code_scrapper/CodeScrapper/change_file",title:"change_file",description:"change_file(file: FileHandler) -> bool",source:"@site/docs/docs/src/repository_scrapping/code_scrapper/CodeScrapper/change_file.md",sourceDirName:"docs/src/repository_scrapping/code_scrapper/CodeScrapper",slug:"/docs/src/repository_scrapping/code_scrapper/CodeScrapper/change_file",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/code_scrapper/CodeScrapper/change_file",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"SingletonMeta",permalink:"/documentor_piedpiper/docs/src/metaclasses/singleton_meta/SingletonMeta"},next:{title:"extract_snippets",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/code_scrapper/CodeScrapper/extract_snippets"}},c={},p=[{value:"<code>change_file(file: FileHandler) -&gt; bool</code>",id:"change_filefile-filehandler---bool",level:2},{value:"Description:",id:"description",level:4},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],s={toc:p},d="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"change_filefile-filehandler---bool"},(0,a.kt)("inlineCode",{parentName:"h2"},"change_file(file: FileHandler) -> bool")),(0,a.kt)("h4",{id:"description"},"Description:"),(0,a.kt)("p",null,"This method updates the input file of the CodeScrapper object and updates the scrapper accordingly. This method belongs to the class CodeScrapper."),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"file")," (",(0,a.kt)("inlineCode",{parentName:"li"},"FileHandler"),"): The new input file to be set for the CodeScrapper object.")),(0,a.kt)("h4",{id:"returns"},"Returns:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bool"),": True if the input file was successfully changed.")),(0,a.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Sample code to demonstrate a common use case\nfile = FileHandler("path/to/file")\nresult_case1 = code_scrapper.change_file(file)\nprint(result_case1)\n\n# Another use case (if applicable)\nfile2 = FileHandler("path/to/another_file")\nresult_case2 = code_scrapper.change_file(file2)\nprint(result_case2)\n')),(0,a.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,a.kt)("p",null,"The method takes a ",(0,a.kt)("inlineCode",{parentName:"p"},"FileHandler")," object as input and sets it as the new input file for the CodeScrapper object. It then calls the ",(0,a.kt)("inlineCode",{parentName:"p"},"_update_scrapper()")," method to update the scrapper accordingly. Finally, it returns True to indicate that the input file was successfully changed."),(0,a.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"FileHandler"),": A class that handles file operations. The ",(0,a.kt)("inlineCode",{parentName:"li"},"change_file")," method relies on this class to set the new input file.")))}u.isMDXComponent=!0}}]);