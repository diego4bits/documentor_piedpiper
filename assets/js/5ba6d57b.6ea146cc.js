"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8126],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(r),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(f,p(p({ref:t},c),{},{components:r})):n.createElement(f,p({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,p=new Array(i);p[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:a,p[1]=o;for(var s=2;s<i;s++)p[s]=r[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4710:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const i={},p=void 0,o={unversionedId:"docs/src/repository_scrapping/file_scrapper/FileScrapper/d__start_scrape",id:"docs/src/repository_scrapping/file_scrapper/FileScrapper/d__start_scrape",title:"d__start_scrape",description:"startscrape(file_path: Path) -> None",source:"@site/docs/docs/src/repository_scrapping/file_scrapper/FileScrapper/d__start_scrape.md",sourceDirName:"docs/src/repository_scrapping/file_scrapper/FileScrapper",slug:"/docs/src/repository_scrapping/file_scrapper/FileScrapper/d__start_scrape",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/file_scrapper/FileScrapper/d__start_scrape",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"d___init__",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/file_scrapper/FileScrapper/d___init__"},next:{title:"d__update_current_file",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/file_scrapper/FileScrapper/d__update_current_file"}},l={},s=[{value:"<code>_start_scrape(file_path: Path) -&gt; None</code>",id:"_start_scrapefile_path-path---none",level:2},{value:"Description:",id:"description",level:4},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],c={toc:s},d="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"_start_scrapefile_path-path---none"},(0,a.kt)("inlineCode",{parentName:"h2"},"_start_scrape(file_path: Path) -> None")),(0,a.kt)("h4",{id:"description"},"Description:"),(0,a.kt)("p",null,"This method performs the initial steps to start the scraping process on a specific file. It belongs to the class ",(0,a.kt)("inlineCode",{parentName:"p"},"FileScrapper"),"."),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"file_path")," (",(0,a.kt)("inlineCode",{parentName:"li"},"Path"),"): The path to the file that will be scraped.")),(0,a.kt)("h4",{id:"returns"},"Returns:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"None"),": This method does not return any value.")),(0,a.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Sample code to demonstrate a common use case\nfile_scrapper = FileScrapper()\nfile_scrapper._start_scrape(Path("path/to/file.py"))\n')),(0,a.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Check if the file extension is supported by checking if it is a member of the ",(0,a.kt)("inlineCode",{parentName:"li"},"FileExtension")," enumeration."),(0,a.kt)("li",{parentName:"ol"},"If the file extension is supported, update the current file to the provided file path."),(0,a.kt)("li",{parentName:"ol"},"Change the file being processed by the ",(0,a.kt)("inlineCode",{parentName:"li"},"CodeScrapper")," object to the current file."),(0,a.kt)("li",{parentName:"ol"},"Extract code snippets from the current file using the ",(0,a.kt)("inlineCode",{parentName:"li"},"CodeScrapper")," object.")),(0,a.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CodeScrapper"),": Responsible for extracting code snippets from a file."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CodeSnippet"),": Represents a code snippet."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"FileHandler"),": Handles file-related operations."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"DocIgnore"),": Filters out documentation comments from code snippets."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"GitManager"),": Manages Git-related operations."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Path"),": Represents a file path."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"List"),": Represents a list of objects."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Dict"),": Represents a dictionary of key-value pairs."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"FileExtension"),": Provides supported file extensions for scraping.")))}u.isMDXComponent=!0}}]);