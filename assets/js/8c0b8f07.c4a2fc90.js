"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[943],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),l=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=l(n),u=r,f=d["".concat(s,".").concat(u)]||d[u]||m[u]||a;return n?i.createElement(f,p(p({ref:t},c),{},{components:n})):i.createElement(f,p({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,p=new Array(a);p[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:r,p[1]=o;for(var l=2;l<a;l++)p[l]=n[l];return i.createElement.apply(null,p)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9680:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var i=n(7462),r=(n(7294),n(3905));const a={},p=void 0,o={unversionedId:"docs/src/snippet_management/snippet_extract/d_SnippetExtract",id:"docs/src/snippet_management/snippet_extract/d_SnippetExtract",title:"d_SnippetExtract",description:"SnippetExtract",source:"@site/docs/docs/src/snippet_management/snippet_extract/d_SnippetExtract.md",sourceDirName:"docs/src/snippet_management/snippet_extract",slug:"/docs/src/snippet_management/snippet_extract/d_SnippetExtract",permalink:"/documentor_piedpiper/docs/src/snippet_management/snippet_extract/d_SnippetExtract",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"SnippetExtract",permalink:"/documentor_piedpiper/docs/src/snippet_management/snippet_extract/SnippetExtract"},next:{title:"add_code_snippet",permalink:"/documentor_piedpiper/docs/src/snippet_management/snippet_storage/SnippetStorage/add_code_snippet"}},s={},l=[{value:"<code>SnippetExtract</code>",id:"snippetextract",level:2},{value:"Description:",id:"description",level:4},{value:"Attributes:",id:"attributes",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],c={toc:l},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"snippetextract"},(0,r.kt)("inlineCode",{parentName:"h2"},"SnippetExtract")),(0,r.kt)("h4",{id:"description"},"Description:"),(0,r.kt)("p",null,"This class represents a snippet extract and provides functionalities for accessing and manipulating information related to the snippet."),(0,r.kt)("h4",{id:"attributes"},"Attributes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"parent_type")," (",(0,r.kt)("inlineCode",{parentName:"li"},"str"),"): The type of the parent node of the snippet."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"parent_identifier")," (",(0,r.kt)("inlineCode",{parentName:"li"},"str"),"): The identifier of the parent node of the snippet."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"snippet_type")," (",(0,r.kt)("inlineCode",{parentName:"li"},"str"),"): The type of the snippet."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"snippet_identifier")," (",(0,r.kt)("inlineCode",{parentName:"li"},"str"),"): The identifier of the snippet."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"snippet_implementation")," (",(0,r.kt)("inlineCode",{parentName:"li"},"str"),"): The implementation of the snippet.")),(0,r.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Sample code to demonstrate a common use case of instantiating and using the class\nsnippet = SnippetExtract(parent_type='function', parent_identifier='function_name', snippet_type='loop', snippet_identifier='loop_1', snippet_implementation='for i in range(10):')\n# The rest of the example\n")),(0,r.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"SnippetExtract")," class is used to represent a snippet extract. It contains information about the parent node of the snippet, the type of the snippet, and its identifier and implementation."),(0,r.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tree_sitter_logic"),": This dependency provides utility functions for working with tree-sitter, a parsing library for tree-based grammars."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"get_identifier()"),": This function is used to get the identifier of a node in the syntax tree."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"get_implementation()"),": This function is used to get the implementation of a node in the syntax tree."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"NodeInfo"),": This class provides information about a node in the syntax tree."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dataclasses"),": This module provides the ",(0,r.kt)("inlineCode",{parentName:"li"},"dataclass")," decorator for creating data classes.")))}m.isMDXComponent=!0}}]);