"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9324],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),l=d(n),p=r,h=l["".concat(s,".").concat(p)]||l[p]||m[p]||a;return n?o.createElement(h,i(i({ref:t},u),{},{components:n})):o.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[l]="string"==typeof e?e:r,i[1]=c;for(var d=2;d<a;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2542:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var o=n(7462),r=(n(7294),n(3905));const a={},i=void 0,c={unversionedId:"docs/src/documentation_orchestrator/documentation_manager/DocumentationManager/d_start_documentation",id:"docs/src/documentation_orchestrator/documentation_manager/DocumentationManager/d_start_documentation",title:"d_start_documentation",description:"start_documentation() -> None",source:"@site/docs/docs/src/documentation_orchestrator/documentation_manager/DocumentationManager/d_start_documentation.md",sourceDirName:"docs/src/documentation_orchestrator/documentation_manager/DocumentationManager",slug:"/docs/src/documentation_orchestrator/documentation_manager/DocumentationManager/d_start_documentation",permalink:"/documentor_piedpiper/docs/src/documentation_orchestrator/documentation_manager/DocumentationManager/d_start_documentation",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"d_show_results",permalink:"/documentor_piedpiper/docs/src/documentation_orchestrator/documentation_manager/DocumentationManager/d_show_results"},next:{title:"d_update_doc_log",permalink:"/documentor_piedpiper/docs/src/documentation_orchestrator/documentation_manager/DocumentationManager/d_update_doc_log"}},s={},d=[{value:"<code>start_documentation() -&gt; None</code>",id:"start_documentation---none",level:2},{value:"Description:",id:"description",level:4},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Exceptions:",id:"exceptions",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],u={toc:d},l="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(l,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"start_documentation---none"},(0,r.kt)("inlineCode",{parentName:"h2"},"start_documentation() -> None")),(0,r.kt)("h4",{id:"description"},"Description:"),(0,r.kt)("p",null,"This method is used to start the documentation process. It checks if a documentation log exists and either runs the first diagnosis or continues with the regular diagnosis."),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("p",null,"This method does not have any parameters."),(0,r.kt)("h4",{id:"returns"},"Returns:"),(0,r.kt)("p",null,"This method does not return any value."),(0,r.kt)("h4",{id:"exceptions"},"Exceptions:"),(0,r.kt)("p",null,"This method does not throw any exceptions."),(0,r.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Start the documentation process\nstart_documentation()\n")),(0,r.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,r.kt)("p",null,"If a documentation log does not exist, the method calls the ",(0,r.kt)("inlineCode",{parentName:"p"},"_run_first_diagnosis()")," method of the ",(0,r.kt)("inlineCode",{parentName:"p"},"DocumentationManager")," class. Otherwise, it calls the ",(0,r.kt)("inlineCode",{parentName:"p"},"_run_diagnosis()")," method of the ",(0,r.kt)("inlineCode",{parentName:"p"},"DocumentationManager")," class."),(0,r.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DocLog"),": This class is responsible for managing the documentation log and checking its existence.")))}m.isMDXComponent=!0}}]);