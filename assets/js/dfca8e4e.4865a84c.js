"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[929],{2063:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>n,metadata:()=>p,toc:()=>c});var s=r(7462),i=(r(7294),r(3905));const n={},a=void 0,p={unversionedId:"docs/src/repository_scrapping/code_scrapper/CodeScrapper/extract_snippets",id:"docs/src/repository_scrapping/code_scrapper/CodeScrapper/extract_snippets",title:"extract_snippets",description:"extract_snippets() -> bool",source:"@site/docs/docs/src/repository_scrapping/code_scrapper/CodeScrapper/extract_snippets.md",sourceDirName:"docs/src/repository_scrapping/code_scrapper/CodeScrapper",slug:"/docs/src/repository_scrapping/code_scrapper/CodeScrapper/extract_snippets",permalink:"/documentor_piedpiper/docs/src/repository_scrapping/code_scrapper/CodeScrapper/extract_snippets",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",next:{title:"Welcome to your Documentation",permalink:"/documentor_piedpiper/"}},o={},c=[{value:"<code>extract_snippets() -&gt; bool</code>",id:"extract_snippets---bool",level:2},{value:"Description:",id:"description",level:4},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Exceptions:",id:"exceptions",level:4},{value:"Usage Cases:",id:"usage-cases",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],l={toc:c},d="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(d,(0,s.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"extract_snippets---bool"},(0,i.kt)("inlineCode",{parentName:"h2"},"extract_snippets() -> bool")),(0,i.kt)("h4",{id:"description"},"Description:"),(0,i.kt)("p",null,"This method performs the extraction of code snippets from a specified input file. It belongs to the class ",(0,i.kt)("inlineCode",{parentName:"p"},"CodeScrapper"),"."),(0,i.kt)("h4",{id:"parameters"},"Parameters:"),(0,i.kt)("p",null,"This method does not take any parameters."),(0,i.kt)("h4",{id:"returns"},"Returns:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bool"),": Returns ",(0,i.kt)("inlineCode",{parentName:"li"},"True")," if the extraction process is successful.")),(0,i.kt)("h4",{id:"exceptions"},"Exceptions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Exception"),": This exception is thrown when no file has been charged.")),(0,i.kt)("h4",{id:"usage-cases"},"Usage Cases:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# Sample code to demonstrate a common use case\nscrapper = CodeScrapper()\nresult = scrapper.extract_snippets()\nprint(result)\n")),(0,i.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Checks if an input file has been charged using the ",(0,i.kt)("inlineCode",{parentName:"li"},"_check_input_file()")," method."),(0,i.kt)("li",{parentName:"ol"},"If no file has been charged, an exception is raised."),(0,i.kt)("li",{parentName:"ol"},"Calls the ",(0,i.kt)("inlineCode",{parentName:"li"},"_scrape_relevant()")," method to perform the extraction of relevant code snippets."),(0,i.kt)("li",{parentName:"ol"},"Calls the ",(0,i.kt)("inlineCode",{parentName:"li"},"_scrape_assignment()")," method to perform the extraction of assignment code snippets."),(0,i.kt)("li",{parentName:"ol"},"Returns ",(0,i.kt)("inlineCode",{parentName:"li"},"True")," if the extraction process is successful.")),(0,i.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CodeScrapper"),": This class depends on the class ",(0,i.kt)("inlineCode",{parentName:"li"},"CodeScrapper")," for accessing its methods and attributes.")))}u.isMDXComponent=!0}}]);