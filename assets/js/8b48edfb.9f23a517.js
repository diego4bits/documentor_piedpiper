"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2236],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=i.createContext({}),c=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=c(e.components);return i.createElement(d.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},_=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),p=c(n),_=r,f=p["".concat(d,".").concat(_)]||p[_]||u[_]||o;return n?i.createElement(f,s(s({ref:t},l),{},{components:n})):i.createElement(f,s({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=_;var a={};for(var d in t)hasOwnProperty.call(t,d)&&(a[d]=t[d]);a.originalType=e,a[p]="string"==typeof e?e:r,s[1]=a;for(var c=2;c<o;c++)s[c]=n[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}_.displayName="MDXCreateElement"},4165:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=n(7462),r=(n(7294),n(3905));const o={},s=void 0,a={unversionedId:"docs/src/tree_sitter_logic/tree_sitter_util/d_get_dependencies",id:"docs/src/tree_sitter_logic/tree_sitter_util/d_get_dependencies",title:"d_get_dependencies",description:"get_dependencies",source:"@site/docs/docs/src/tree_sitter_logic/tree_sitter_util/d_get_dependencies.md",sourceDirName:"docs/src/tree_sitter_logic/tree_sitter_util",slug:"/docs/src/tree_sitter_logic/tree_sitter_util/d_get_dependencies",permalink:"/documentor_piedpiper/docs/src/tree_sitter_logic/tree_sitter_util/d_get_dependencies",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"d__recursive_get_nodes",permalink:"/documentor_piedpiper/docs/src/tree_sitter_logic/tree_sitter_util/d__recursive_get_nodes"},next:{title:"d_get_identifier",permalink:"/documentor_piedpiper/docs/src/tree_sitter_logic/tree_sitter_util/d_get_identifier"}},d={},c=[{value:"<code>get_dependencies</code>",id:"get_dependencies",level:2},{value:"Description:",id:"description",level:4},{value:"Important info:",id:"important-info",level:4},{value:"Usage :",id:"usage-",level:4},{value:"How it Works:",id:"how-it-works",level:4},{value:"Dependencies:",id:"dependencies",level:4}],l={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,i.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"get_dependencies"},(0,r.kt)("inlineCode",{parentName:"h2"},"get_dependencies")),(0,r.kt)("h4",{id:"description"},"Description:"),(0,r.kt)("p",null,"This code snippet extracts the dependencies from a given root node. It is typically used to obtain the list of dependencies in a codebase."),(0,r.kt)("h4",{id:"important-info"},"Important info:"),(0,r.kt)("p",null,"This function relies on the ",(0,r.kt)("inlineCode",{parentName:"p"},"global_node_types")," function to extract the dependencies."),(0,r.kt)("h4",{id:"usage-"},"Usage :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This code snippet is used to obtain the dependencies in a codebase."),(0,r.kt)("li",{parentName:"ul"},"This code snippet is used to determine the dependencies of a specific root node."),(0,r.kt)("li",{parentName:"ul"},"This code snippet is used to analyze the dependencies of a codebase.")),(0,r.kt)("h4",{id:"how-it-works"},"How it Works:"),(0,r.kt)("p",null,"The function ",(0,r.kt)("inlineCode",{parentName:"p"},"get_dependencies")," takes a ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," node as input and initializes a set of ",(0,r.kt)("inlineCode",{parentName:"p"},"dependencies_types"),' with the values "import_from_statement". '),(0,r.kt)("p",null,"The function then calls the ",(0,r.kt)("inlineCode",{parentName:"p"},"global_node_types")," function passing the ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," node and the ",(0,r.kt)("inlineCode",{parentName:"p"},"dependencies_types")," set as arguments. This function returns a list of nodes that match the specified types."),(0,r.kt)("p",null,"Finally, the list of nodes representing the dependencies is returned."),(0,r.kt)("h4",{id:"dependencies"},"Dependencies:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Node"),": Represents a node in the codebase."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"List"),": Represents a list of objects."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"global_node_types"),": A function that extracts nodes of specific types from a codebase.")))}u.isMDXComponent=!0}}]);